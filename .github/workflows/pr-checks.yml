name: Pull Request Checks
on: [pull_request, merge_group]

concurrency:
  # Only allow one active run of this workflow, per PR.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Read .nvmrc
      run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      id: nvm
    - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Read .nvmrc
      run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      id: nvm
    - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Read .nvmrc
      run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      id: nvm
    - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm test --if-present

  commitlint:
    name: Commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        if: github.actor != 'dependabot[bot]' && github.event_name != 'merge_group'
      - uses: wagoid/commitlint-github-action@5ce82f5d814d4010519d15f0552aec4f17a1e1fe # v5.4.5
        if: github.actor != 'dependabot[bot]' && github.event_name != 'merge_group'

  autosquash:
    name: Block Autosquash Commits
    runs-on: ubuntu-latest
    steps:
      - name: Block Autosquash Commits
        if:  github.event_name != 'merge_group'
        uses: xt0rted/block-autosquash-commits-action@79880c36b4811fe549cfffe20233df88876024e7 # v2.2.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  autoapprove:
    needs: [lint, build, test, autosquash]
    # Only run job if the PR comes from a repo owned by Lime and the PR was
    # created by Dependabot.
    if: github.event.pull_request.head.repo.owner.login == 'Lundalogik' && github.actor == 'dependabot[bot]' && github.event_name != 'merge_group'
    runs-on: ubuntu-latest
    steps:
      - name: Enable Automerge
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.ENABLE_AUTOMERGE }}
      - name: Autoapprove
        uses: hmarr/auto-approve-action@f0939ea97e9205ef24d872e76833fa908a770363 # v4.0.0
        with:
          github-token: ${{ secrets.APPROVE_AUTOMATIC_PRS }}
